# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    publishWebProjects: true

- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: marmoorerev
    organization: 'Mark Moore'
    scannerMode: MSBuild
    projectKey: markmoorerev_MvcStarter
    projectName: MvcStarter
    extraProperties: |
      sonar.exclusions=**/lib/**
  displayName: sonarcloud analysis prepare

- task: SonarCloudAnalyze@1
displayName: sonarcloud analysis run

- task: PublishTestResults@2
  condition: succeededOrFailed()
  inputs:
    testRunner: VSTest
    testResultsFiles: $(Common.TestResultsDirectory)/*.trx
  displayName: test results build publish

- task: PublishCodeCoverageResults@1
  condition: succeededOrFailed()
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: $(Common.TestResultsDirectory)/*/coverage.cobertura.xml
  displayName: code coverage build publish

- task: SonarCloudPublish@1
  condition: succeededOrFailed()
  displayName: sonarcloud results build publish

- task: DotNetCoreCLI@2
  inputs:
    command: 'test'
    projects: 'MvcProjectStarter/MvcProjectStarter.sln'
    testRunTitle: 'running tests'

- task: AzureRmWebAppDeployment@4
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: 'Azure subscription 1(5d150957-9944-40b9-b9e9-2a32c983a1f8)'
    appType: 'webApp'
    WebAppName: 'mark-mvc-test'
    packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.zip'
